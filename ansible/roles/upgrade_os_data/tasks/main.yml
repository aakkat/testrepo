- shell: hostname -I | cut -d' ' -f1
  register: output
- set_fact:
       HOST: "{{output.stdout}}"
- debug: msg="{{HOST}}"
- block:
  - name: Create Directory {{LOG_DIR}}/logs_{{HOST}} on remote server {{ansible_hostname}}
    file:
       path: "{{LOG_DIR}}/logs_{{HOST}}"
       state: directory
  - set_fact:
         LOG_DIRR: "{{LOG_DIR}}/logs_{{HOST}}"
  - debug:
        msg: "Directory is {{LOG_DIRR}}"
  delegate_to: localhost

- name: setting date variable
  shell: date "+%F-%H-%M-%S"
  register: out
- set_fact:
     DATE: "{{out.stdout}}"
- debug:
     msg: "file name would be in format log_TASK_{{DATE}}.extension"

- name: Removing any existing log file
  find:
    paths: "{{LOG_DIRR}}"
    patterns:
       - "log_upgrade_os_data_*.log"
  register: files_to_delete
  delegate_to: localhost
  become: yes

- name: Ansible remove file glob
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  delegate_to: localhost
  become: yes


- name: show device os ip and device name detail
  block:
    - name: show device os detail
      shell: |
         echo "show devices device platform |display json" | ncs_cli -C
      register: out1
    - set_fact:
         devos: "{{ out1.stdout | from_json | json_query('data.*.device[].platform[].{devOS: name}') }}"
    - debug:
         msg: "{{ devos }}"

    - name: show device IP and device name detail
      shell: |
         echo "show running-config devices device address | display json" | ncs_cli -C
      register: out2
    - set_fact:
         devosip: "{{ out2.stdout | from_json | json_query('data.*.device[]') |list }}"
    - debug:
         msg: "{{ devosip }}"
  become: true

- name: Updating log file
  block:
     - name: show device os log
       shell: |
          echo "{{devos}}" > {{LOG_DIRR}}/log_upgrade_os_data_devOS_{{DATE}}.log
     - name: show device os log
       shell: |
          echo "{{devosip}}" > {{LOG_DIRR}}/log_upgrade_os_data_devOSIP_{{DATE}}.log
  delegate_to: localhost
  become: true

- name: Run python script on downloaded ncs.conf
  local_action: command python3 merge_devOS.py --server_ip "{{HOST}}"